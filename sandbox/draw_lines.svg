
<svg version="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="800" height="600" onload="init(evt)" onmousemove="draw(evt)" onmouseup="deselect()" onmousedown="select(evt)">
        <style>
		text {
		  font-size: 20px;
		  cursor: default;
		  font-family: Tahoma, Geneva, sans-serif;
		}
		.noselect {
		  -webkit-touch-callout: none; /* iOS Safari */
		  -webkit-user-select: none;   /* Chrome/Safari/Opera */
		  -khtml-user-select: none;    /* Konqueror */
		  -moz-user-select: none;      /* Firefox */
		  -ms-user-select: none;       /* Internet Explorer/Edge */
		  user-select: none;           /* Non-prefixed version, currently
		                                  not supported by any browser */
		}
    .hidden {
      opacity:0.0;
    }  
    .disabled {
      opacity:0.3;
      cursor: default;
      pointer-events: none
    }
    .enabled {
      opacity:1.0;
      cursor: pointer;
    }
    
		.moveable{
			cursor: pointer;	
		}
		.locked {
			cursor: default;	
		}
    </style>
    <script type="text/ecmascript"><![CDATA[
        var svgDoc;
		var domainHeight = 400;
        function init(evt) {
            if ( window.svgDocument == null ) {
                svgDoc = evt.target.ownerDocument;
                var mainDocument = window.parent.document;
            }  
			var activeFish;
			var fishArray;
			var dots;
			var selectedPoint;
			var drawnPoints
			var dotSpace;
			resetDefaults()
			
        };
		// set up the initial position of control-point dots;
		// reset button and dot classes
  		function resetDefaults(){
		
			fishArray = ["wally","bass"]
			drawnPoints = {"wally":[],"bass":[]};
			activeFish = fishArray[0]
        	dots = [40,80,120,160,200,240,280,320,360,400,440,480,520];
			dotSpace = 20;
			
        	selectedPoint = null;
			var wallyG = document.getElementById("wally-dots");
			var bassG = document.getElementById("bass-dots");
			while (wallyG.firstChild) { wallyG.removeChild(wallyG.firstChild); }
			while (bassG.firstChild) { bassG.removeChild(bassG.firstChild); }
			
            for (var i = 0; i < dots.length; i++) {
				var domainBox = document.createElementNS(document.rootElement.namespaceURI,"rect"); 
				domainBox.setAttributeNS(null, "x", dots[i]-dotSpace);  
				domainBox.setAttributeNS(null, "width", dotSpace*2);  
				domainBox.setAttributeNS(null, "height", domainHeight);
				domainBox.setAttributeNS(null, "id", "box-"+i) 
				svgDoc.getElementById("domain-boxes").appendChild(domainBox);
				var newW = document.createElementNS(document.rootElement.namespaceURI,"circle"); 
				newW.setAttributeNS(null, "cx", dots[i]);  
				newW.setAttributeNS(null, "cy", "0"); 
				newW.setAttributeNS(null, "class","hidden");
				newW.setAttributeNS(null, "r", 3);
				var newB = newW.cloneNode();
				newW.setAttributeNS(null, "id", "wally-"+i)
				newB.setAttributeNS(null, "id", "bass-"+i)
				svgDoc.getElementById("wally-dots").appendChild(newW);
				svgDoc.getElementById("bass-dots").appendChild(newB);
				drawnPoints["wally"][i] = false;
				drawnPoints["bass"][i] = false;
			}
  			svgDoc.getElementById("start-over").setAttribute('class','disabled');
  			svgDoc.getElementById("im-done").setAttribute('class','disabled');
			for (var i = 0; i < fishArray.length; i++) {
				drawLine(fishArray[i])
			}
  			
  		}

        function imDone(){
        	svgDoc.getElementById('im-done').setAttribute('class','disabled');
        }
        
        function draw(evt){
        	if (selectedPoint === null) {return}
			var id = evt.target.getAttribute('id');
			if (id !== null){
				var i = id.split('-')[1];
				svgDoc.getElementById(activeFish+"-"+[i]).setAttribute('class','enabled');
				svgDoc.getElementById(activeFish+"-"+[i]).setAttribute('cy',evt.clientY);
				drawnPoints[activeFish][i]=true;
			}
			drawLine();
        };

        function isFinished(){
        	for (var i = 0; i < dots.length; i++) {
        		if (drawnPoints[activeFish][i] === false){
        			return false;
        		}
        	}
        	return true;
        }

        function drawLine(fish){
			fish = fish || activeFish;
        	var path = "M0,0 ";

        	for (var i = 0; i < dots.length; i++) {
        		var dotEl = svgDoc.getElementById(fish+"-"+[i]);
        		if (drawnPoints[activeFish][i] & drawnPoints[activeFish][i-1]){
        			path = path+"L"+dotEl.getAttribute('cx')+","+dotEl.getAttribute('cy')+" ";
        		} else {
        			path = path+"M"+dotEl.getAttribute('cx')+","+dotEl.getAttribute('cy')+" ";
        		}
        		
        	}
        	svgDoc.getElementById(fish + "-line").setAttribute('d',path);
        	
        }
		
		function switchFish(fish){
			if (activeFish === fish){
			// do nothing
			} else {
			// let the user know they are changing fish?
				activeFish = fish;
			}
			
		}
		
		function newFish(){
			activeFish = 'bass'
		}
		function select(evt){
			var id = evt.target.getAttribute('id');
			// allow you to switch to a different active fish
			console.log(id)
			if (id !== null && evt.target.getAttribute("class") === "enabled"){
				var fish = id.split("-")[0];
				switchFish(fish);
			} 
			selectedPoint = true;
		}
        function deselect(){
            selectedPoint = null;
            if (isFinished()){
        		svgDoc.getElementById("im-done").setAttribute('class','enabled');
        		svgDoc.getElementById("im-done").setAttribute('onmousedown', 'newFish()')
        		newFish()
        	}
            for (var i = 0; i < dots.length; i++) {
            	if (svgDoc.getElementById(activeFish+"-"+i).getAttribute('class') === 'enabled'){
            		svgDoc.getElementById("start-over").setAttribute('class','enabled');
            		svgDoc.getElementById("start-over").setAttribute('onmousedown', 'resetDefaults()')
            		return
            	}
            }
        };
    
    ]]> </script>	
	<g id="domain-boxes" opacity='0'/>
	<path fill='none' stroke='red' stroke-width="3" id="wally-line" />
	<path fill='none' stroke="#01b29F" stroke-width="3" id="bass-line" />
	<g id="wally-dots" fill='red'/>
	<g id="bass-dots" fill="#01b29F"/>
    <g id='buttons' transform="translate(400,540)">
		<g id='im-done' transform="translate(-180,0)">
      		<rect width="160" height="40" fill="#01b29F"/>
      		<text y="20" x="80" dy='0.33em' text-anchor='middle' class='noselect' fill="white">Finished</text>
      		<rect width="160" height="40" opacity="0"/>
    	</g>
   	 	<g id='start-over' transform="translate(20,0)" class='disabled'>
      		<rect width="160" height="40" fill="grey"/>
      		<text y="20" x="80" dy='0.33em' text-anchor='middle' class='noselect' fill="white">Reset</text>
      		<rect width="160" height="40" opacity="0"/>
    	</g>
    </g>
	<defs>
	    <linearGradient id="temperature" x1="0%" y1="0%" x2="0%" y2="100%">
	      <stop offset="0%" style="stop-color:rgb(200,60,50);stop-opacity:1"/>
	      <stop offset="50%" style="stop-color:rgb(240,230,125);stop-opacity:1"/>
		  <stop offset="90%" style="stop-color:rgb(28,105,180);stop-opacity:1"/>
	      <stop offset="100%" style="stop-color:rgb(28,105,180);stop-opacity:1"/>
	    </linearGradient>
		<filter id="gaus-blur">
			<feGaussianBlur stdDeviation="1" />
		</filter>
	  </defs>
</svg>